Header:
0x08 - 4 byte offset that will take us to the text header
0x0c - 4 byte offset that will take us to the text entries
0x10 - 4 byte offset that will take us to the font sheet
0x14 - 4 byte size in bytes of the font sheet

SequenceEntries:
-Contains an index to the text string as well as character image data

Text Header - Header for lines of dialog
4 Bytes - Size of text header / 4
Then for each entry - 4 byte number of characters preceeding this entry

Text Entries - Entry for each line of dialog
2 byte per character - Index into font sheet.  1st byte = row, 2nd byte = column (1 based)
FFFE = New Line
FFFF = End of Entry

SK file in Memory
@00210000

Sync File in Memory
@00260000

Text Data in Memory:
@00217418

Sequence Data in Memory:
@00210518

Address of string that will be displayed next is written at code address @0x0602C376

In this example, the text address is 0021745E stored in R01

Something is writing 0002 at 060A8562. 2 is the index into the text table.  Will be multiplied by 4 to get final offset.
See what is writing this two.

002 written at 2020fe (4 byte write?)

06029a38

SAKURA.bin loaded @6005000

In ghidra, 45370 is saddress of the code at 0602C376 in yabause

Start of sequence(?) data is in memory @00210518 (@0x518 in SK0101)
Index into text table is gotten by offset in r3 @ code 060321C0
Code @060321CE, ands r1&r2 where r2 is going to contain the index of the line
060A855A has index written to it that will eventually be written to r4
Code @0602A184 has text index written to r4

2107C8 is read (C009) to get the 9th string.  That's
210690 is read (C009) to get Yoneda's image.

In memory 2107C0:
C004 C000 0102 7FFE C009* C3ED 0103 7FFE C039*(image id)  

Dialog index: 0102 7FFE ####
Image index: 0103(or other code) 7FFE CAAA CBBB CDDD(idx from set)
AAA: Character index
BBB: Image set - 4
CCC: Expression

Special Entries Entries:
0102 7FFE C### #### 0103 7FFE C### <--Last one there is the line number
C3EA 0103 7FFE C005 C3EB
C3F5 0103 7FFE C011 C3F6
C3FE 0103 7FFE C022 C3FF
C40A 0103 7FFE C041 C000

Solution: Look for 0102 7FFE for dialog code, and then look the previous 7FFE value to see what the associated image index was

Face Image calculations around code 0605A066

Once 0xC000 is found at 603218A (Ghidra: 4b1f8), jump to code 602A17C( G: 43176). 
0602A182, @r1, r4 //r4 will now contain image id (0039 for example), then jump to code 0602A198( g: 43192)
0039 written to 2020FE
Then written to 060A8564
0039 eventually used to calculate something at 0605A068
Ending with r0 containing FFFFD929

Something wrote texture offsets for each text entry to 060a5180 (06012e78 & 06012eb4 contains a pointer to this.  Try changing offset to 060a5100)
060a51a6

06012ece => mov 0xd, r10 => loop to print out empty line

Can't clobber data around 060a525a